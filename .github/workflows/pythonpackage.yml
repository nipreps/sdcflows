# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ master, 'maint/*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    if: "!startsWith(github.ref, 'refs/tags/') && !contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        pip: ["pip==21.2", "pip~=22.0"]

    steps:
    - uses: actions/checkout@v3
    - name: Fetch all tags (for setuptools_scm to work)
      run: |
        /usr/bin/git -c protocol.version=2 fetch --tags --prune --unshallow origin
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v3
      with:
        path: $HOME/.cache/pip
        key: pip-cache-v1
        restore-keys: |
          pip-cache-
    - name: Build in confined environment and interpolate version
      run: |
        python -m venv /tmp/buildenv
        source /tmp/buildenv/bin/activate
        python -m pip install -U build "setuptools >= 45" wheel "setuptools_scm >= 6.2" \
                              setuptools_scm_git_archive pip twine docutils
        
        python -m build -s -w
        python -m twine check dist/sdcflows-*
        mv dist /tmp/package
        rm -rf sdcflows.egg-info/
        # Interpolate version
        if [[ "$GITHUB_REF" == refs/tags/* ]]; then
          TAG=${GITHUB_REF##*/}
        fi
        THISVERSION=$( python -m setuptools_scm )
        THISVERSION=${TAG:-$THISVERSION}
        echo "Expected VERSION: \"${THISVERSION}\""
        echo "THISVERSION=${THISVERSION}" >> $GITHUB_ENV
    - name: Install in confined environment [pip]
      run: |
        python -m venv /tmp/pip
        source /tmp/pip/bin/activate
        python -m pip install -U "setuptools >= 45" "setuptools_scm >= 6.2" "${{ matrix.pip }}"
        python -m pip install .
        INSTALLED_VERSION=$(python -c 'import sdcflows as sdc; print(sdc.__version__, end="")')
        echo "VERSION: \"${THISVERSION}\""
        echo "INSTALLED: \"${INSTALLED_VERSION}\""
        test "${INSTALLED_VERSION}" = "${THISVERSION}"
    - name: Install in confined environment [sdist]
      run: |
        python -m venv /tmp/install_sdist
        source /tmp/install_sdist/bin/activate
        python -m pip install -U "setuptools >= 45" "${{ matrix.pip }}"
        python -m pip install /tmp/package/sdcflows*.tar.gz
        INSTALLED_VERSION=$(python -c 'import sdcflows as sdc; print(sdc.__version__, end="")')
        echo "VERSION: \"${THISVERSION}\""
        echo "INSTALLED: \"${INSTALLED_VERSION}\""
        test "${INSTALLED_VERSION}" = "${THISVERSION}"
    - name: Install in confined environment [wheel]
      run: |
        python -m venv /tmp/install_wheel
        source /tmp/install_wheel/bin/activate
        python -m pip install -U "setuptools >= 45" "${{ matrix.pip }}"
        python -m pip install /tmp/package/sdcflows*.whl
        INSTALLED_VERSION=$(python -c 'import sdcflows as sdc; print(sdc.__version__, end="")')
        echo "INSTALLED: \"${INSTALLED_VERSION}\""
        test "${INSTALLED_VERSION}" = "${THISVERSION}"

  flake8:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3
      uses: actions/setup-python@v4
      with:
        python-version: 3
    - run: pip install flake8
    - run: flake8 sdcflows/
